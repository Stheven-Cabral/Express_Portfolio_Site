{
    "projects": [
        {
            "id": 1,
            "project_name": "Employee Directory",
            "description": "The focus of this project was to write JavaScript that would retrieve data from the random user API using the Fetch API, parse the data, use the data to create twelve random employees, build an employee directory, and add search and modal interactivity.The main highlights of this project are the search function as well as the modal event handlers. The search allows a user to filter the employee directory by name. Employee cards are clickable and clicking on a card opens up a modal window with furthur employee details. The next and previous buttons respond to filtered results so that only filtered employees have viewable modals.",
            "technologies": ["HTML", "CSS", "JavaScript", "Fetch API"],
            "live_link": "https://stheven-cabral.github.io/Public_API_Request/",
            "github_link": "https://github.com/Stheven-Cabral/Public_API_Request",
            "image_urls": ["/images/project-1-main.png", "/images/project-1-all.png", "/images/project-1-modal.png", "/images/project-1-filtered.png"]
        },
        {
            "id": 2,
            "project_name": "Phrase Hunter",
            "description": "The focus of this project was to use object oriented programming concepts to build an interactive phrase quessing game. Classes were used to represent the Game as well as the Phrase to be guessed. The Game phrase includes methods that starts the game, selects a random phrase, handles letter select events, checks if the player is a winner, and displays the win or loss screen. The Phrase class includes methods that add the phrase to the display, checks if selected letters are in the phrase, removes lives, and displays the correct chosen letters.",
            "technologies": ["HTML", "CSS", "animate.css", "JavaScript"],
            "live_link": "https://stheven-cabral.github.io/Phrase_Hunter_Game/",
            "github_link": "https://github.com/Stheven-Cabral/Phrase_Hunter_Game",
            "image_urls": ["/images/project-2-main.png", "/images/project-2-game.png", "/images/project-2-win.png", "/images/project-2-lose.png"]
        },
        {
            "id": 3,
            "project_name": "Interactive Form",
            "description": "For this project, the goal was to add interactivity and validation to a registration form for a fictional conference. I used pure JavaScript to add interactivity, conditional behaviors as well as validation for various input types. Submission of the form is only permitted when no form validation errors occur.",
            "technologies": ["HTML", "CSS", "JavaScript", "Regular Expressions"],
            "live_link": "https://stheven-cabral.github.io/Interactive_Form/",
            "github_link": "https://github.com/Stheven-Cabral/Interactive_Form",
            "image_urls": ["/images/project-3-main.png", "/images/project-3-top.png", "/images/project-3-middle.png", "/images/project-3-bottom.png"]
        },
        {
            "id": 4,
            "project_name": "List Pagination and Filtering",
            "description": "The focus of this project was to encorporate pagination and filtering to make the student directory more user friendly and easy to use. I wrote multiple JavaScript functions to encorporate a search bar, search filtering functionality, pagination, and control of how many students are displayed on each page. In addition, use of the search bar filters the student list, and the pagination links adjust to the number of filtered student items.",
            "technologies": ["HTML", "CSS", "JavaScript"],
            "live_link": "https://stheven-cabral.github.io/List_Pagination_and_Filtering/",
            "github_link": "https://github.com/Stheven-Cabral/List_Pagination_and_Filtering",
            "image_urls": ["/images/project-4-main.png", "/images/project-4-full.png", "/images/project-4-filtered.png", "/images/project-4-noresult.png"]
        },
        {
            "id": 5,
            "project_name": "Quote Generator",
            "description": "The Random Quote Generator displays a quote from an array of movie quote objects. I used JavaScript to code various functions that call a random quote object from a quotes array, displays the quote object properties in the quote box, change the background color, and displays a different quote at a set interval.",
            "technologies": ["HTML", "CSS", "JavaScript"],
            "live_link": "https://stheven-cabral.github.io/Random_Quote_Generator/",
            "github_link": "https://github.com/Stheven-Cabral/Random_Quote_Generator",
            "image_urls": ["/images/project-5-main.png", "/images/project-5-quote1.png", "/images/project-5-quote2.png", "/images/project-5-quote3.png"]
        },
        {
            "id": 6,
            "project_name": "Interactive Photo Gallery",
            "description": "An interactive photo gallery project that displays small images of various photographs that are clickable in order to display a lightbox containing a larger view of the photograph. I used jQuery to build the search function and a jQuery plugin for the image lightbox.",
            "technologies": ["HTML", "CSS", "JavaScript", "jQuery"],
            "live_link": "https://stheven-cabral.github.io/Interactive_Photo_Gallery/",
            "github_link": "https://github.com/Stheven-Cabral/Interactive_Photo_Gallery",
            "image_urls": ["/images/project-6-main.png", "/images/project-6-full.png", "/images/project-6-lightbox.png", "/images/project-6-lightbox2.png"]
        },
        {
            "id": 7,
            "project_name": "Dashboard with Widgets",
            "description": "A responsive dashboard I created using HTML, CSS, and JavaScript. I used inline SVG's in order to customize icon fills and paths. In addition, I used the chart.js library to create line, bar, and pie chart widgets. The project focused on creating tables, charts, and graphics and other interactive user components.",
            "technologies": ["HTML", "CSS", "JavaScript", "chart.js"],
            "live_link": "https://stheven-cabral.github.io/Web_App_Dashboard/",
            "github_link": "https://github.com/Stheven-Cabral/Web_App_Dashboard",
            "image_urls": ["/images/project-7-main.png", "/images/project-7-traffic.png", "/images/project-7-users.png", "/images/project-7-settings.png"]
        },
        {
            "id": 8,
            "project_name": "Front End Tech Degree Professional Portfolio",
            "description": "A responsive professional portfolio I built for the final project of the Team Treehouse Front End Web Development Tech Degree program. The portfolio is a showcases of the technologies I learned from the program such as HTML, CSS, JavaScript and Boostrap. The portfolio section includes projects I've built using these technologies.",
            "technologies": ["HTML", "CSS", "JavaScript", "jQuery", "Bootstrap"],
            "live_link": "https://stheven-cabral.github.io/Stheven_Cabral_Professional_Portfolio/",
            "github_link": "https://github.com/Stheven-Cabral/Stheven_Cabral_Professional_Portfolio",
            "image_urls": ["/images/project-8-main.png", "/images/project-8-projects.png", "/images/project-8-skills.png", "/images/project-8-contacts.png"]
        },
        {
            "id": 9,
            "project_name": "Library Database Manager",
            "description": "A library database manager web application I built using Pug, CSS, JavaScript, Express, Node.js, Sequelize, and SQLite. The application include endpoints to a list of books currently in the database, a form for adding a book, a form for updating books, and a delete book option.",
            "technologies": ["HTML", "CSS", "JavaScript", "Express", "node.js", "Sequelize", "SQLite"],
            "live_link": "https://sc-fsjs-td-library-database.herokuapp.com/books",
            "github_link": "https://github.com/Stheven-Cabral/SQL-Library-Database-Manager",
            "image_urls": ["/images/project-9-main.png", "/images/project-9-addbook.png", "/images/project-9-updatebook.png", "/images/project-9-deletebook.png"]
        },
        {
            "id": 10,
            "project_name": "Course Database App Built with React",
            "description": "A course database application that provides a way for users to administer a school database containing information about courses. Users can interact with the database by retrieving a list of courses, viewing detail for a specific course, as well as creating, updating and deleting courses in the database.",
            "technologies": ["HTML", "CSS", "JavaScript", "Express", "Sequelize", "SQLite", "Postman", "React", "Context API"],
            "live_link": "https://fsjs-td-react-course-database.herokuapp.com/",
            "github_link": "https://github.com/Stheven-Cabral/full-stack-course-database-app",
            "image_urls": ["/images/project-10-main.png", "/images/project-10-signup.png", "/images/project-10-courses.png", "/images/project-10-course-detail.png"]
        },
        {
            "id": 11,
            "project_name": "Gallery App Built with React",
            "description": "A gallery application that provides a way for a user to find images based on a search topic. The project focused on using React Router and how to handle fetched data from a third party API.",
            "technologies": ["HTML", "CSS", "JavaScript", "React"],
            "live_link": "https://sc-fsjs-td-react-gallery-app.herokuapp.com/",
            "github_link": "https://github.com/Stheven-Cabral/React-Gallery-Application",
            "image_urls": ["/images/project-11-main.png", "/images/project-11-search.png", "/images/project-11-noresult.png", "/images/project-11-pagenotfound.png"]
        },
        {
            "id": 12,
            "project_name": "Basketball Court Review Website",
            "description": "A basketball court review website that provides a way for a user to find an indoor or outdoor court based on a search input, view and add reviews, and add new courts to the database. The project focused on using the Hasura to setup up an API that points to a a postgres database on heroku. Apollo was used to connect React components to the Hasura gnerated API.",
            "technologies": ["HTML", "CSS", "Emotion", "JavaScript", "React", "Hasura graphQL", "Apollo Client"],
            "live_link": "https://hoop-up.netlify.app/",
            "github_link": "https://github.com/Stheven-Cabral/basketball-court-rating-app/blob/master/README.md",
            "image_urls": ["/images/hoopup-main.png", "/images/hoopup_1.png", "/images/hoopup_2.png", "/images/hoopup_3.png"]
        }
    ]
}